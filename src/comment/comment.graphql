type Query {
  getComment(_id: ID!): Comment
  getCommentsByThreadId(threadId: ID!, commentIds: [ID], page: Int, limit: Int): Comments
    @aws_api_key
    @aws_cognito_user_pools
  getActionCounts(threadId: ID!): ActionCounts @aws_api_key @aws_cognito_user_pools
}

type Mutation {
  createComment(threadId: ID!, parentIds: [ID], body: String!, path: String): Comment
  updateComment(_id: ID!, body: String): Comment
  deleteComment(_id: ID!): ID!
}

type Subscription {
  addedComment(threadId: ID!): Comment @aws_subscribe(mutations: ["createComment", "updateComment"])
}

type Comment @aws_api_key @aws_cognito_user_pools {
  _id: ID
  body: String
  threadId: ID
  parentIds: [ID]
  createdBy: Response
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Comments @aws_api_key @aws_cognito_user_pools {
  count: Int
  data: [Comment]
}

type ActionCounts @aws_api_key @aws_cognito_user_pools {
  commentCount: Int
  likeCount: Int
  likedByUser: Boolean
}
