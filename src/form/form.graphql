type Field2 {
  _id: ID
  label: String
  fieldType: String
  options: AWSJSON
  typeId: ListType
}

input Field2 {
  label: String!
  fieldType: String!
  options: AWSJSON
  typeId: ID
}

type Form {
  _id: ID!
  parentId: ID
  name: String
  fields: [Field2]
  settings: AWSJSON
  published: Boolean
  createdBy: User
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Forms {
  count: Int
  data: [Form]
}

type FieldValue2 {
  _id: ID
  field: String
  value: String
  valueNumber: Float
  valueBoolean: Boolean
  valueDate: AWSDateTime
  itemId: ListItem
}

input FieldValue2 {
  field: String
  value: String
  valueNumber: Float
  valueBoolean: Boolean
  valueDate: AWSDateTime
  itemId: ID
}

type Response {
  _id: ID!
  formId: ID
  values: [FieldValue2]
  createdBy: User
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Responses {
  count: Int
  data: [Response]
}

type Query {
  getForm(_id: ID!): Form
  getForms(page: Int, limit: Int, search: String): Forms
  getResponse(_id: ID!): Response
  getResponses(page: Int, limit: Int): Responses
}

type Mutation {
  createForm(parentId: ID, name: String!, fields: [Field2], settings: AWSJSON): Form
  updateForm(
    _id: ID!
    parentId: ID
    name: String
    fields: [Field2]
    settings: AWSJSON
    published: Boolean
  ): Form
  deleteForm(_id: ID!): ID!
  createResponse(formId: ID!, values: [FieldValue2]): Response
  updateResponse(_id: ID!, values: [FieldValue2]): Response
  deleteResponse(_id: ID!): ID!
}

type Subscription {
  formSub: Form @aws_subscribe(mutations: ["createForm", "updateForm"])
  updatedForm(_id: ID!): Form @aws_subscribe(mutations: ["updateForm"])
  deletedForm: Form @aws_subscribe(mutations: ["deleteForm"])
  responseSub: Response @aws_subscribe(mutations: ["createResponse", "updateResponse"])
  updatedResponse(_id: ID!): Response @aws_subscribe(mutations: ["updateResponse"])
  deletedResponse: Response @aws_subscribe(mutations: ["deleteResponse"])
}
